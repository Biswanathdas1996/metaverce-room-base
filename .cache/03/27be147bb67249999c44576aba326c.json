{"id":"node_modules/tone/build/esm/core/worklet/ToneAudioWorkletProcessor.worklet.js","dependencies":[{"name":"D:\\Metaverce\\Builder Meta\\node_modules\\tone\\build\\esm\\core\\worklet\\ToneAudioWorkletProcessor.worklet.js.map","includedInParent":true,"mtime":1662982065713},{"name":"D:\\Metaverce\\Builder Meta\\node_modules\\tone\\Tone\\core\\worklet\\ToneAudioWorkletProcessor.worklet.ts","includedInParent":true,"mtime":1662982065713},{"name":"D:\\Metaverce\\Builder Meta\\package.json","includedInParent":true,"mtime":1663097937200},{"name":"D:\\Metaverce\\Builder Meta\\node_modules\\tone\\package.json","includedInParent":true,"mtime":1662982065713},{"name":"./WorkletGlobalScope","loc":{"line":1,"column":29,"index":29},"parent":"D:\\Metaverce\\Builder Meta\\node_modules\\tone\\build\\esm\\core\\worklet\\ToneAudioWorkletProcessor.worklet.js","resolved":"D:\\Metaverce\\Builder Meta\\node_modules\\tone\\build\\esm\\core\\worklet\\WorkletGlobalScope.js"}],"generated":{"js":"\"use strict\";\n\nvar _WorkletGlobalScope = require(\"./WorkletGlobalScope\");\n\nconst toneAudioWorkletProcessor =\n/* javascript */\n`\n\t/**\n\t * The base AudioWorkletProcessor for use in Tone.js. Works with the [[ToneAudioWorklet]]. \n\t */\n\tclass ToneAudioWorkletProcessor extends AudioWorkletProcessor {\n\n\t\tconstructor(options) {\n\t\t\t\n\t\t\tsuper(options);\n\t\t\t/**\n\t\t\t * If the processor was disposed or not. Keep alive until it's disposed.\n\t\t\t */\n\t\t\tthis.disposed = false;\n\t\t   \t/** \n\t\t\t * The number of samples in the processing block\n\t\t\t */\n\t\t\tthis.blockSize = 128;\n\t\t\t/**\n\t\t\t * the sample rate\n\t\t\t */\n\t\t\tthis.sampleRate = sampleRate;\n\n\t\t\tthis.port.onmessage = (event) => {\n\t\t\t\t// when it receives a dispose \n\t\t\t\tif (event.data === \"dispose\") {\n\t\t\t\t\tthis.disposed = true;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t}\n`;\n(0, _WorkletGlobalScope.addToWorklet)(toneAudioWorkletProcessor);"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../Tone/core/worklet/ToneAudioWorkletProcessor.worklet.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":3,"column":0}},{"source":"../../../../Tone/core/worklet/ToneAudioWorkletProcessor.worklet.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":5,"column":0}},{"source":"../../../../Tone/core/worklet/ToneAudioWorkletProcessor.worklet.ts","name":null,"original":{"line":3,"column":6},"generated":{"line":5,"column":6}},{"source":"../../../../Tone/core/worklet/ToneAudioWorkletProcessor.worklet.ts","name":null,"original":{"line":3,"column":31},"generated":{"line":5,"column":31}},{"source":"../../../../Tone/core/worklet/ToneAudioWorkletProcessor.worklet.ts","name":null,"original":{"line":3,"column":34},"generated":{"line":6,"column":0}},{"source":"../../../../Tone/core/worklet/ToneAudioWorkletProcessor.worklet.ts","name":null,"original":{"line":3,"column":51},"generated":{"line":7,"column":0}},{"source":"../../../../Tone/core/worklet/ToneAudioWorkletProcessor.worklet.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":37,"column":1}},{"source":"../../../../Tone/core/worklet/ToneAudioWorkletProcessor.worklet.ts","name":null,"original":{"line":35,"column":0},"generated":{"line":38,"column":0}},{"source":"../../../../Tone/core/worklet/ToneAudioWorkletProcessor.worklet.ts","name":null,"original":{"line":35,"column":0},"generated":{"line":38,"column":4}},{"source":"../../../../Tone/core/worklet/ToneAudioWorkletProcessor.worklet.ts","name":null,"original":{"line":35,"column":0},"generated":{"line":38,"column":36}},{"source":"../../../../Tone/core/worklet/ToneAudioWorkletProcessor.worklet.ts","name":null,"original":{"line":35,"column":13},"generated":{"line":38,"column":38}},{"source":"../../../../Tone/core/worklet/ToneAudioWorkletProcessor.worklet.ts","name":null,"original":{"line":35,"column":0},"generated":{"line":38,"column":63}}],"sources":{"../../../../Tone/core/worklet/ToneAudioWorkletProcessor.worklet.ts":"import { addToWorklet } from \"./WorkletGlobalScope\";\n\nconst toneAudioWorkletProcessor = /* javascript */ `\n\t/**\n\t * The base AudioWorkletProcessor for use in Tone.js. Works with the [[ToneAudioWorklet]]. \n\t */\n\tclass ToneAudioWorkletProcessor extends AudioWorkletProcessor {\n\n\t\tconstructor(options) {\n\t\t\t\n\t\t\tsuper(options);\n\t\t\t/**\n\t\t\t * If the processor was disposed or not. Keep alive until it's disposed.\n\t\t\t */\n\t\t\tthis.disposed = false;\n\t\t   \t/** \n\t\t\t * The number of samples in the processing block\n\t\t\t */\n\t\t\tthis.blockSize = 128;\n\t\t\t/**\n\t\t\t * the sample rate\n\t\t\t */\n\t\t\tthis.sampleRate = sampleRate;\n\n\t\t\tthis.port.onmessage = (event) => {\n\t\t\t\t// when it receives a dispose \n\t\t\t\tif (event.data === \"dispose\") {\n\t\t\t\t\tthis.disposed = true;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t}\n`;\n\naddToWorklet(toneAudioWorkletProcessor);\n"},"lineCount":null}},"error":null,"hash":"1d39748bd9e0384bb9400ab770eeba34","cacheData":{"env":{}}}